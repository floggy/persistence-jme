Datatypes and its size

	The table below shows the valid data types and its size that are Floggy compliance.
	All primitive types are saved using only the size of that type.
	Object types receive one byte more that indicates the state of the object (null or not).
	Only fields of a class that implements net.sourceforge.floggy.Persistable will be persisted.

*----------*--------------*------------------------*
| Type   | Default value | Size |
*----------*--------------*------------------------*
| boolean   | false     |1 byte|
*----------*--------------*------------------------*
| byte   | 0     |1 byte|
*----------*--------------*------------------------*
| char   | 0     |2 bytes|
*----------*--------------*------------------------*
| double | 0.0	|8 bytes|
*----------*--------------*------------------------*
| float  | 0.0	|4 bytes|
*----------*--------------*------------------------*
| int    | 0     |4 bytes |
*----------*--------------*------------------------*
| long   | 0     |8 bytes |
*----------*--------------*------------------------*
| short    | 0     | 2 bytes|
*----------*--------------*------------------------*
| java.lang.Boolean | null     | 1 byte case the value are null or 2 bytes case not|
*----------*--------------*------------------------*
| java.lang.Byte | null     | 1 byte case the value are null or 2 bytes case not|
*----------*--------------*------------------------*
| java.lang.Character | null     | 1 byte case the value are null or 3 bytes case not|
*----------*--------------*------------------------*
| java.lang.Double | null     | 1 byte case the value are null or 9 bytes case not|
*----------*--------------*------------------------*
| java.lang.Float | null     | 1 byte case the value are null or 5 bytes case not|
*----------*--------------*------------------------*
| java.lang.Integer | null     | 1 byte case the value are null or 5 bytes case not|
*----------*--------------*------------------------*
| java.lang.Long | null     | 1 byte case the value are null or 9 bytes case not|
*----------*--------------*------------------------*
| java.lang.Short | null     | 1 byte case the value are null or 3 bytes case not|
*----------*--------------*------------------------*
| java.lang.String | null     | 1 byte case the value are null, case not the size are calculate conform the specification of {{{http://java.sun.com/javase/6/docs/api/java/io/DataInput.html#modified-utf-8}Modified UTF-8}} |
*----------*--------------*------------------------*
| java.util.Date | null     | 1 byte case the value are null or 9 bytes case not. The java.util.Date are transformed in a long type and saved using writeLong(long)|
*----------*--------------*------------------------*
| java.util.Vector | null     | 1 byte case the value are null|
*----------*--------------*------------------------*
| net.sourceforge.floggy.Persistable | null     | 1 byte case the value are null|
*----------*--------------*------------------------*

		Examples
	
	Suppose that you have a class like this:
	
+------------------------------+
public class Frog implements Persistable {
        
        private String name;
        private Date bornDate;
        private char sex;
}
+------------------------------+

	Now suppose this three scenarios:
	
	[1] A instance of Frog with <<null>> name, <<null>> bornDate and <<0>> sex the total cost of store this instance is: 
		(1 byte) + (1 byte) + (2 bytes)= 4 bytes. This happens because no value must be save for name and bornDate only one byte indicating nullable state.
		
	[2] A instance of Frog with <<Flip Flop>> name, <<05-30-2007>> bornDate and <<M>> sex the total cost of store this instance is:
		(1 byte + 9 bytes) + (1 byte + 8 bytes) + (2 bytes)= 21 bytes. This happens because the values for name and bornDate doesn't are null.
		
	[3] A instance of Frog with <<null>> name, <<05-30-2007>> bornDate and <<F>> sex the total cost of store this instance is:
		(1 byte) + (1 byte + 8 bytes) + (2 bytes)= 12 bytes. This happens because the value of name are null.
		